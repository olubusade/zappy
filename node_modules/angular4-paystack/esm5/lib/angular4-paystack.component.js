/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Angular4PaystackService } from './angular4-paystack.service';
/**
 * @record
 */
function MyWindow() { }
if (false) {
    /** @type {?} */
    MyWindow.prototype.PaystackPop;
}
var Angular4PaystackComponent = /** @class */ (function () {
    function Angular4PaystackComponent(paystackService) {
        this.paystackService = paystackService;
        this.paymentInit = new EventEmitter();
        this.onClose = new EventEmitter(); // tslint:disable-line
        // tslint:disable-line
        this.callback = new EventEmitter();
        // tslint:disable-line
        this.isPaying = false;
    }
    /**
     * @return {?}
     */
    Angular4PaystackComponent.prototype.pay = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var errorText, payment;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        errorText = '';
                        if (this.paystackOptions && Object.keys(this.paystackOptions).length >= 2) {
                            errorText = this.valdateInput(this.paystackOptions);
                            this.generateOptions(this.paystackOptions);
                        }
                        else {
                            errorText = this.valdateInput(this);
                            this.generateOptions(this);
                        }
                        if (errorText) {
                            console.error(errorText);
                            return [2 /*return*/, errorText];
                        }
                        return [4 /*yield*/, this.paystackService.loadScript()];
                    case 1:
                        _a.sent();
                        if (this.isPaying) {
                            return [2 /*return*/];
                        }
                        if (this.paymentInit.observers.length) {
                            this.paymentInit.emit();
                        }
                        payment = window.PaystackPop.setup(this._paystackOptions);
                        payment.openIframe();
                        this.isPaying = true;
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Angular4PaystackComponent.prototype.valdateInput = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        if (!this.callback.observers.length) {
            return 'ANGULAR-PAYSTACK: Insert a callback output like so (callback)=\'PaymentComplete($event)\' to check payment status';
        }
        return this.paystackService.checkInput(obj);
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Angular4PaystackComponent.prototype.generateOptions = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        this._paystackOptions = this.paystackService.getPaystackOptions(obj);
        this._paystackOptions.onClose = (/**
         * @return {?}
         */
        function () {
            if (_this.onClose.observers.length) {
                _this.onClose.emit();
            }
        });
        this._paystackOptions.callback = (/**
         * @param {...?} response
         * @return {?}
         */
        function () {
            var _a;
            var response = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                response[_i] = arguments[_i];
            }
            (_a = _this.callback).emit.apply(_a, tslib_1.__spread(response));
        });
    };
    Angular4PaystackComponent.decorators = [
        { type: Component, args: [{
                    selector: 'angular4-paystack',
                    template: "<button [ngClass]=\"class\" [ngStyle]=\"style\" (click)=\"pay()\"><ng-content></ng-content></button>"
                }] }
    ];
    /** @nocollapse */
    Angular4PaystackComponent.ctorParameters = function () { return [
        { type: Angular4PaystackService }
    ]; };
    Angular4PaystackComponent.propDecorators = {
        key: [{ type: Input }],
        email: [{ type: Input }],
        amount: [{ type: Input }],
        metadata: [{ type: Input }],
        ref: [{ type: Input }],
        currency: [{ type: Input }],
        plan: [{ type: Input }],
        quantity: [{ type: Input }],
        channels: [{ type: Input }],
        subaccount: [{ type: Input }],
        transaction_charge: [{ type: Input }],
        bearer: [{ type: Input }],
        class: [{ type: Input }],
        style: [{ type: Input }],
        paystackOptions: [{ type: Input }],
        paymentInit: [{ type: Output }],
        onClose: [{ type: Output }],
        callback: [{ type: Output }]
    };
    return Angular4PaystackComponent;
}());
export { Angular4PaystackComponent };
if (false) {
    /** @type {?} */
    Angular4PaystackComponent.prototype.key;
    /** @type {?} */
    Angular4PaystackComponent.prototype.email;
    /** @type {?} */
    Angular4PaystackComponent.prototype.amount;
    /** @type {?} */
    Angular4PaystackComponent.prototype.metadata;
    /** @type {?} */
    Angular4PaystackComponent.prototype.ref;
    /** @type {?} */
    Angular4PaystackComponent.prototype.currency;
    /** @type {?} */
    Angular4PaystackComponent.prototype.plan;
    /** @type {?} */
    Angular4PaystackComponent.prototype.quantity;
    /** @type {?} */
    Angular4PaystackComponent.prototype.channels;
    /** @type {?} */
    Angular4PaystackComponent.prototype.subaccount;
    /** @type {?} */
    Angular4PaystackComponent.prototype.transaction_charge;
    /** @type {?} */
    Angular4PaystackComponent.prototype.bearer;
    /** @type {?} */
    Angular4PaystackComponent.prototype.class;
    /** @type {?} */
    Angular4PaystackComponent.prototype.style;
    /** @type {?} */
    Angular4PaystackComponent.prototype.paystackOptions;
    /** @type {?} */
    Angular4PaystackComponent.prototype.paymentInit;
    /** @type {?} */
    Angular4PaystackComponent.prototype.onClose;
    /** @type {?} */
    Angular4PaystackComponent.prototype.callback;
    /** @type {?} */
    Angular4PaystackComponent.prototype._paystackOptions;
    /**
     * @type {?}
     * @private
     */
    Angular4PaystackComponent.prototype.isPaying;
    /**
     * @type {?}
     * @private
     */
    Angular4PaystackComponent.prototype.paystackService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcjQtcGF5c3RhY2suY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhcjQtcGF5c3RhY2svIiwic291cmNlcyI6WyJsaWIvYW5ndWxhcjQtcGF5c3RhY2suY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV2RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7OztBQUV0RSx1QkFFQzs7O0lBREMsK0JBQWlCOztBQUluQjtJQXlCRSxtQ0FBb0IsZUFBd0M7UUFBeEMsb0JBQWUsR0FBZixlQUFlLENBQXlCO1FBTGxELGdCQUFXLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFDekQsWUFBTyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDLENBQUMsc0JBQXNCOztRQUM1RSxhQUFRLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7O1FBRXhELGFBQVEsR0FBRyxLQUFLLENBQUM7SUFDc0MsQ0FBQzs7OztJQUUxRCx1Q0FBRzs7O0lBQVQ7Ozs7Ozt3QkFDTSxTQUFTLEdBQUcsRUFBRTt3QkFDbEIsSUFBSSxJQUFJLENBQUMsZUFBZSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7NEJBQ3pFLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQzs0QkFDcEQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7eUJBQzVDOzZCQUFNOzRCQUNMLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDOzRCQUNwQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO3lCQUM1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RXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQYXlzdGFja09wdGlvbnMsIFByaXZhdGVQYXlzdGFja09wdGlvbnMgfSBmcm9tICcuL3BheXN0YWNrLW9wdGlvbnMnO1xuaW1wb3J0IHsgQW5ndWxhcjRQYXlzdGFja1NlcnZpY2UgfSBmcm9tICcuL2FuZ3VsYXI0LXBheXN0YWNrLnNlcnZpY2UnO1xuXG5pbnRlcmZhY2UgTXlXaW5kb3cgZXh0ZW5kcyBXaW5kb3cge1xuICBQYXlzdGFja1BvcDogYW55O1xufVxuZGVjbGFyZSB2YXIgd2luZG93OiBNeVdpbmRvdztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW5ndWxhcjQtcGF5c3RhY2snLFxuICB0ZW1wbGF0ZTogYDxidXR0b24gW25nQ2xhc3NdPVwiY2xhc3NcIiBbbmdTdHlsZV09XCJzdHlsZVwiIChjbGljayk9XCJwYXkoKVwiPjxuZy1jb250ZW50PjwvbmctY29udGVudD48L2J1dHRvbj5gLFxufSlcbmV4cG9ydCBjbGFzcyBBbmd1bGFyNFBheXN0YWNrQ29tcG9uZW50IHtcbiAgQElucHV0KCkga2V5OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGVtYWlsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFtb3VudDogbnVtYmVyO1xuICBASW5wdXQoKSBtZXRhZGF0YToge307XG4gIEBJbnB1dCgpIHJlZjogc3RyaW5nO1xuICBASW5wdXQoKSBjdXJyZW5jeTogc3RyaW5nO1xuICBASW5wdXQoKSBwbGFuOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHF1YW50aXR5OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGNoYW5uZWxzOiBzdHJpbmdbXTtcbiAgQElucHV0KCkgc3ViYWNjb3VudDogc3RyaW5nO1xuICBASW5wdXQoKSB0cmFuc2FjdGlvbl9jaGFyZ2U6IG51bWJlcjsgLy8gdHNsaW50OmRpc2FibGUtbGluZVxuICBASW5wdXQoKSBiZWFyZXI6IHN0cmluZztcbiAgQElucHV0KCkgY2xhc3M6IHN0cmluZztcbiAgQElucHV0KCkgc3R5bGU6IG9iamVjdDtcbiAgQElucHV0KCkgcGF5c3RhY2tPcHRpb25zOiBQYXlzdGFja09wdGlvbnM7XG4gIEBPdXRwdXQoKSBwYXltZW50SW5pdDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgQE91dHB1dCgpIG9uQ2xvc2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7IC8vIHRzbGludDpkaXNhYmxlLWxpbmVcbiAgQE91dHB1dCgpIGNhbGxiYWNrOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBwdWJsaWMgX3BheXN0YWNrT3B0aW9uczogUGFydGlhbDxQcml2YXRlUGF5c3RhY2tPcHRpb25zPjsgLy8gdHNsaW50OmRpc2FibGUtbGluZVxuICBwcml2YXRlIGlzUGF5aW5nID0gZmFsc2U7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcGF5c3RhY2tTZXJ2aWNlOiBBbmd1bGFyNFBheXN0YWNrU2VydmljZSkge31cblxuICBhc3luYyBwYXkoKSB7XG4gICAgbGV0IGVycm9yVGV4dCA9ICcnO1xuICAgIGlmICh0aGlzLnBheXN0YWNrT3B0aW9ucyAmJiBPYmplY3Qua2V5cyh0aGlzLnBheXN0YWNrT3B0aW9ucykubGVuZ3RoID49IDIpIHtcbiAgICAgIGVycm9yVGV4dCA9IHRoaXMudmFsZGF0ZUlucHV0KHRoaXMucGF5c3RhY2tPcHRpb25zKTtcbiAgICAgIHRoaXMuZ2VuZXJhdGVPcHRpb25zKHRoaXMucGF5c3RhY2tPcHRpb25zKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXJyb3JUZXh0ID0gdGhpcy52YWxkYXRlSW5wdXQodGhpcyk7XG4gICAgICB0aGlzLmdlbmVyYXRlT3B0aW9ucyh0aGlzKTtcbiAgICB9XG4gICAgaWYgKGVycm9yVGV4dCkge1xuICAgICAgY29uc29sZS5lcnJvcihlcnJvclRleHQpO1xuICAgICAgcmV0dXJuIGVycm9yVGV4dDtcbiAgICB9XG4gICAgYXdhaXQgdGhpcy5wYXlzdGFja1NlcnZpY2UubG9hZFNjcmlwdCgpO1xuICAgIGlmICh0aGlzLmlzUGF5aW5nKSB7IHJldHVybjsgfVxuICAgIGlmICh0aGlzLnBheW1lbnRJbml0Lm9ic2VydmVycy5sZW5ndGgpIHtcbiAgICAgIHRoaXMucGF5bWVudEluaXQuZW1pdCgpO1xuICAgIH1cbiAgICBjb25zdCBwYXltZW50ID0gd2luZG93LlBheXN0YWNrUG9wLnNldHVwKHRoaXMuX3BheXN0YWNrT3B0aW9ucyk7XG4gICAgcGF5bWVudC5vcGVuSWZyYW1lKCk7XG4gICAgdGhpcy5pc1BheWluZyA9IHRydWU7XG4gIH1cblxuICB2YWxkYXRlSW5wdXQob2JqOiBQYXlzdGFja09wdGlvbnMpIHtcbiAgICBpZiAoIXRoaXMuY2FsbGJhY2sub2JzZXJ2ZXJzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuICdBTkdVTEFSLVBBWVNUQUNLOiBJbnNlcnQgYSBjYWxsYmFjayBvdXRwdXQgbGlrZSBzbyAoY2FsbGJhY2spPVxcJ1BheW1lbnRDb21wbGV0ZSgkZXZlbnQpXFwnIHRvIGNoZWNrIHBheW1lbnQgc3RhdHVzJztcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMucGF5c3RhY2tTZXJ2aWNlLmNoZWNrSW5wdXQob2JqKTtcbiAgfVxuXG4gIGdlbmVyYXRlT3B0aW9ucyhvYmo6IFBheXN0YWNrT3B0aW9ucykge1xuICAgIHRoaXMuX3BheXN0YWNrT3B0aW9ucyA9IHRoaXMucGF5c3RhY2tTZXJ2aWNlLmdldFBheXN0YWNrT3B0aW9ucyhvYmopO1xuICAgIHRoaXMuX3BheXN0YWNrT3B0aW9ucy5vbkNsb3NlID0gKCkgPT4ge1xuICAgICAgaWYgKHRoaXMub25DbG9zZS5vYnNlcnZlcnMubGVuZ3RoKSB7XG4gICAgICAgIHRoaXMub25DbG9zZS5lbWl0KCk7XG4gICAgICB9XG4gICAgfTtcbiAgICB0aGlzLl9wYXlzdGFja09wdGlvbnMuY2FsbGJhY2sgPSAoLi4ucmVzcG9uc2UpID0+IHtcbiAgICAgIHRoaXMuY2FsbGJhY2suZW1pdCguLi5yZXNwb25zZSk7XG4gICAgfTtcbiAgfVxuXG59XG4iXX0=